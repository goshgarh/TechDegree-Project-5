// ==========================================================================
// Mixins
// ==========================================================================

// BEM selectors

@mixin e($element) {
	&__#{$element} {
    @content;
  }
}
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

@mixin grid_col {
     border-radius: 0.4em;
    text-align: center;
    padding: 0.5em;
}

@mixin flex_nav {
    @extend %nav-item-horz;
}

@mixin flex_grid_row {
    margin-top: 30px;
    display: flex;
    flex-direction: column;
}


// Media queries

@mixin mq($break) {
  
  @if $break == "medium" {
    @media (min-width: $brkpoint-md + 1) {
      @content;
    }
  }
  
   @else {
   	@error "Whoops! No value could be retrieved for `#{$break}`. "
  }
}

// Generate modifier color classes

@mixin bg-colors($map) {
	@each $theme, $color in $map {
		&--#{$theme} {
			background-color: $color;    
		}
	}
}


// Adjacent sibling margins

@mixin doubly($margin: 1em) {
	& + & {
	  margin-left: $margin;
    @content;
	}
}

// Grid Columns
     
@mixin g-columns {
  @for $i from 1 through $g-col-count {
    $context: g-context($g-col-width, $g-col-count ,$g-gutter-width) !global;  
    $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));
    
    // Generate column modifier classes
    &--#{$i} {
      width: percentage($target / $context);
    }
  }
}          